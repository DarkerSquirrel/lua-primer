[section:core Core]
[import ../include/primer/error.hpp]
[import ../include/primer/expected.hpp]
[import ../include/primer/push.hpp]
[import ../include/primer/read.hpp]
[import ../include/primer/result.hpp]
[import ../include/primer/adapt.hpp]
[import ../include/primer/lua_ref.hpp]
[import ../include/primer/bound_function.hpp]
[import ../include/primer/coroutine.hpp]
[import ../include/primer/support/types.hpp]

[import ../test/examples/expected.cpp]

The core features of primer are general-purpose lua binding facilities.

They do not rely on *lua eris*, and can be useful in an application which only
uses vanilla lua 5.3 or 5.2. They also don't particularly rely on much of the
standard library.

These features serve such purposes as:

* transferring C++ objects to and from the lua stack
* constructing C++ objects as lua userdata
* transforming C++ functions into functions that can be called from lua scripts
* constructing C++ objects that represent references to pure lua values in a VM, such as functions and coroutines.

[include Error.qbk]
[include Expected.qbk]
[include Push.qbk]
[include Read.qbk]
[include Result.qbk]
[include Adapt.qbk]
[include Userdata.qbk]
[include LuaRef.qbk]
[include BoundFunction.qbk]
[include Coroutine.qbk]

[endsect]
