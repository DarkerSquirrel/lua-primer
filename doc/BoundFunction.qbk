[section bound_function]

`primer::bound_function` is a `primer::lua_ref` which is known to point to an object of function type. `bound_function`
provides several handy methods for calling the function, passing arbitrary numbers of C++ types, and obtaining the result
as a `primer::lua_ref`. These objects are pushed onto the lua stack using `primer::push`, then the bound function is invoked
using pcall. Any errors are returned to the caller -- the lua stack is always unchanged by this operation at the end.

`primer::bound_function` can be used to create C++ function objects referring to a function implemented in lua. These objects
can be safe and properly report errors, even if the user function errs or the lua VM is destroyed.

Like `lua_ref` however, these objects are not thread-safe.

`primer::bound_function` can also be used to create a `primer::coroutine`.

[endsect]
