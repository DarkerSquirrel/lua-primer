sudo: required
# sudo is required by the clang_3_7 install script
dist: trusty
language: cpp
matrix:
  include:
    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9
            - gdb
      env: COMPILER=g++-4.9
    - compiler: clang
      addons:
        apt:
          packages:
            - gdb
    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
            - gdb
      env: COMPILER=g++-5
    - compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
            - gdb
      env: COMPILER=clang++-3.7

before_install:

  - if [[ "${COMPILER}" == "clang++-3.7" ]]; then sudo ./travis/install_clang_3_7.sh; fi
  - if [[ "${COMPILER}" != "" ]]; then export CXX=${COMPILER}; fi

install:
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - BOOST_VERSION=1.60.0
  - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}

  - if [[ "${BOOST_VERSION}" == "default" ]]; then BOOST_VERSION=1.60.0; fi

  - if [[ "${BOOST_VERSION}" == "1.60.0" ]]; then BOOST_URL="http://sourceforge.net/projects/boost/files/boost/1.60.0/boost_1_60_0.tar.gz"; fi
  - if [[ "${BOOST_URL}" != "" ]]; then mkdir boost && travis_retry wget --quiet -O - ${BOOST_URL} | tar --strip-components=1 -xz -C boost; fi

  - cd boost/tools/build && ./bootstrap.sh && ./b2 install --prefix=${DEPS_DIR}/b2
  - export PATH=${DEPS_DIR}/b2/bin:${PATH}

  - export BOOST_ROOT=${DEPS_DIR}/boost

  - cd ${TRAVIS_BUILD_DIR}
  - pwd
  - ls

  - cd test
  - cp ../travis/write_project_config.sh .
  - ./write_project_config.sh
  - cat project-config.jam

  - cd ${TRAVIS_BUILD_DIR}
  - pwd
  - ls

script:
  - $CC --version
  - $CXX --version

  - cd test

#  - if [[ "${NO_STATIC_ASSERTS}" != "" ]]; then export FLAGS="--toolset=${CC} --no-static-asserts"; else export FLAGS="--toolset=${CC}"; fi
#  TODO: How can get a more recent standard library on trusty?
  - export FLAGS="--toolset=${CC} --no-static-asserts";

  - export LUA_ROOT=lua-5.3.1
  - echo ${LUA_ROOT}

  - ./test.sh ${FLAGS}
  - ./lua-5.3.1-tests.sh

  - ./test.sh ${FLAGS} --with-lua-32bit
  - ./lua-5.3.1-tests.sh

  - export LUA_ROOT=lua-5.3.3
  - echo ${LUA_ROOT}

  - ./test.sh ${FLAGS}

  - ./test.sh ${FLAGS} --with-lua-32bit

  - ./test.sh ${FLAGS} --with-lua-as-cpp
  - ./lua-5.3.3-tests.sh

  - ./test.sh ${FLAGS} --with-lua-as-cpp --with-lua-32bit

  - ./test.sh ${FLAGS} release

  - ./test.sh ${FLAGS} release --with-lua-32bit

  - ./test.sh ${FLAGS} release --with-lua-as-cpp
  - ./lua-5.3.3-tests.sh

  - export LUA_ROOT=eris-1.1.0-5.3
  - echo ${LUA_ROOT}

  - ./test.sh ${FLAGS}


  - export LUA_ROOT=eris-master-lua5.3
  - echo ${LUA_ROOT}

  - ./test.sh ${FLAGS}
  - ./eris-internal-tests.sh

  - ./test.sh ${FLAGS} --with-lua-32bit
# TODO: Figure out what is wrong :(
  - ./eris-internal-tests.sh || :

  - ./test.sh ${FLAGS} --with-lua-as-cpp
  - ./eris-internal-tests.sh

  - ./test.sh ${FLAGS} --with-lua-32bit --with-lua-as-cpp
  - ./eris-internal-tests.sh

  - ./test.sh ${FLAGS} release --with-lua-32bit --with-lua-as-cpp

