# Operating system (build VM template)
os: Visual Studio 2015

# build platform, i.e. Win32 (instead of x86), x64, Any CPU. This setting is optional.
# platform: 
# - Win32
# - x64

# scripts that are called at very beginning, before repo cloning
init:
  - git config --global core.autocrlf input

# clone directory
clone_folder: C:\projects\primer

# fetch repository as zip archive
shallow_clone: true                 # default is "false"

branches:
  only: 
   - master

build: off

environment:
  BOOST_VER: "boost_1_60_0"
  BOOST_URL: "https://sourceforge.net/projects/boost/files/boost/1.60.0/boost_1_60_0.zip"

cache:
  - C:\projects\boost_1_60_0.zip

install:
  - ps: >-
      If($true) {
        Add-Type -assembly "system.io.compression.filesystem"

        $boost_path = "C:\projects\" + $env:BOOST_VER
        $boost_zip = $boost_path + ".zip"

        If(Test-Path $boost_zip) {
          Write-Host "Found cached boost"
        } Else {
          Write-Host "Downloading boost..."
          (new-object net.webclient).DownloadFile($env:BOOST_URL, $boost_zip)
        }

        Write-Host "Extracting boost..."
        [io.compression.zipfile]::ExtractToDirectory($boost_zip, "C:\projects\")

        Set-Location $boost_path
        Write-Host "Bootstrapping..."
        & ".\bootstrap.bat"

        $env:BOOST_ROOT = $boost_path
        $env:Path += ";" + $boost_path + ";"
        
        $env:LUA_ROOT = "lua-5.3.3"

        Set-Location "C:\projects\primer\test"
        Write-Host "Building test executables"
        & b2 --toolset=msvc --no-static-asserts --debug-symbols=on --debug-store=database -d+2

        Write-Host "Attempting to copy the symbol files for test executables"        
        cmd /r dir
        cmd /r dir bin\
        cmd /r dir bin\msvc-14.0\
        cmd /r dir bin\msvc-14.0\debug\
        cmd /r dir bin\msvc-14.0\debug\threading-multi
        cmd /r copy /Y bin\msvc-14.0\debug\debug-symbols-on\threading-multi\*.pdb stage\
        cmd /r copy /Y cdb_script.txt stage\
      }
      
# Note: static asserts are disabled because in MSVC 2015, standard containers are not
# noexcept correct unfortunately.

# TODO: What is the right cdb path?
# $SymPath = "srv;C:\Windows\Symbols;C:\projects\primer\test\stage;http://msdl.microsoft.com/download/symbols"


test_script:
  - ps: >-
      If($true) {
        Write-Host ""
        Write-Host "Running " + $env:LUA_ROOT + " unit tests"

        Set-Location "C:\projects\primer\test\lua-5.3.3-tests"
        ../stage_lua/lua.exe -e "_port=true" all.lua

        Write-Host ""
        Write-Host "Running eris unit tests"

        Set-Location "C:\projects\primer\test\stage_lua"

        cmd /r dir

        ./persist.exe persist.lua test.eris
        ./unpersist.exe unpersist.lua test.eris

        Write-Host ""
        Write-Host "Running primer test executables.."

        Set-Location "C:\projects\primer\test"
      
        $env:Path += ";C:\Program Files (x86)\Windows Kits\8.0\Debuggers\x86\;"
        $env:Path += ";C:\Program Files (x86)\Windows Kits\8.0\Debuggers\x64\;"
        $SymPath = "C:\projects\primer\test\stage;SRV*c:\symbols*http://msdl.microsoft.com/download/symbols"
        
        cmd /r mkdir c:\symbols

        $files = Get-ChildItem C:\projects\primer\test\stage\*.exe
        ForEach($file in $files) {
          Write-Host ""
          Write-Host $file.fullName " ... "
          cdb -y $SymPath -c "|;g;kv;q" -o $file.fullName
          Write-Host "Exit code: " $lastExitCode
        }
      }
